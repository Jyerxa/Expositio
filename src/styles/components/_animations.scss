// Animations and Transitions
// Professional Presentation Template System

// Fragment animation system
.reveal .slides section .fragment {
  opacity: 0;
  visibility: hidden;
  @include animate(all, var(--transition-bounce));
  transform: translateY(20px);
  
  &.visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  
  // Animation variants
  &.fade-in-then-out {
    &.current-fragment {
      opacity: 1;
    }
  }
  
  &.fade-up {
    transform: translateY(40px);
    
    &.visible {
      transform: translateY(0);
    }
  }
  
  &.fade-down {
    transform: translateY(-40px);
    
    &.visible {
      transform: translateY(0);
    }
  }
  
  &.fade-left {
    transform: translateX(40px);
    
    &.visible {
      transform: translateX(0);
    }
  }
  
  &.fade-right {
    transform: translateX(-40px);
    
    &.visible {
      transform: translateX(0);
    }
  }
  
  &.zoom-in {
    transform: scale(0.8);
    
    &.visible {
      transform: scale(1);
    }
  }
  
  &.zoom-out {
    transform: scale(1.2);
    
    &.visible {
      transform: scale(1);
    }
  }
  
  &.rotate-in {
    transform: rotate(-15deg) scale(0.8);
    
    &.visible {
      transform: rotate(0deg) scale(1);
    }
  }
  
  &.slide-in-left {
    transform: translateX(-100px);
    
    &.visible {
      transform: translateX(0);
    }
  }
  
  &.slide-in-right {
    transform: translateX(100px);
    
    &.visible {
      transform: translateX(0);
    }
  }
  
  &.bounce-in {
    transform: scale(0.3);
    animation-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
    
    &.visible {
      transform: scale(1);
    }
  }
  
  &.highlight-red {
    &.visible {
      background-color: rgba(244, 67, 54, 0.2);
      @include animate(background-color, 2s);
    }
  }
  
  &.highlight-green {
    &.visible {
      background-color: rgba(76, 175, 80, 0.2);
      @include animate(background-color, 2s);
    }
  }
  
  &.highlight-blue {
    &.visible {
      background-color: rgba(77, 208, 225, 0.2);
      @include animate(background-color, 2s);
    }
  }
  
  // Sequential fragments with staggered timing
  &.fragment-index-0 { transition-delay: 0s; }
  &.fragment-index-1 { transition-delay: 0.1s; }
  &.fragment-index-2 { transition-delay: 0.2s; }
  &.fragment-index-3 { transition-delay: 0.3s; }
  &.fragment-index-4 { transition-delay: 0.4s; }
  &.fragment-index-5 { transition-delay: 0.5s; }
}

// Slide transition animations
.reveal .slides {
  section {
    // Entry animations for new slides
    &.future {
      transform: translateX(100%);
      opacity: 0;
    }
    
    &.past {
      transform: translateX(-100%);
      opacity: 0;
    }
    
    &.present {
      transform: translateX(0);
      opacity: 1;
      @include animate(all, var(--transition-slow));
    }
  }
}

// Custom slide backgrounds with animations
.slide-background {
  // Animated gradient backgrounds
  &.gradient-animated {
    background: linear-gradient(45deg, var(--primary-cyan), var(--accent-teal), var(--primary-blue), var(--accent-purple));
    background-size: 300% 300%;
    animation: gradientShift 8s ease infinite;
  }
  
  // Particle background animation
  &.particles {
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(77, 208, 225, 0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(77, 182, 172, 0.2), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(149, 117, 205, 0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255, 255, 255, 0.1), transparent);
      background-repeat: repeat;
      background-size: 200px 200px;
      animation: particleFloat 20s linear infinite;
      pointer-events: none;
    }
  }
  
  // Wave animation
  &.waves {
    position: relative;
    overflow: hidden;
    
    &::before,
    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 200%;
      height: 100px;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(77, 208, 225, 0.1),
        transparent
      );
      border-radius: 50%;
      animation: waveMotion 6s ease-in-out infinite;
    }
    
    &::after {
      animation-delay: -3s;
      opacity: 0.5;
    }
  }
}

// Text animations
.text-animate {
  &.typewriter {
    overflow: hidden;
    border-right: 2px solid var(--primary-cyan);
    white-space: nowrap;
    animation: 
      typewriter 3s steps(40, end),
      blink-caret 0.75s step-end infinite;
  }
  
  &.glow-pulse {
    animation: glowPulse 2s ease-in-out infinite alternate;
  }
  
  &.color-shift {
    background: linear-gradient(45deg, var(--primary-cyan), var(--accent-teal), var(--primary-blue));
    background-size: 300% 300%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 4s ease infinite;
  }
}

// Loading and progress animations
.loading-animation {
  &.dots {
    &::after {
      content: '';
      animation: loadingDots 1.5s infinite;
    }
  }
  
  &.pulse {
    animation: pulse 2s infinite;
  }
  
  &.spin {
    animation: spin 1s linear infinite;
  }
}

// Interactive element animations
.interactive-element {
  @include animate(all, var(--transition-base));
  
  &:hover {
    transform: translateY(-2px);
    @include glow(var(--primary-cyan), 0.3, 15px);
  }
  
  &:active {
    transform: translateY(0);
    transition-duration: 0.1s;
  }
}

// Button press animation
.btn-animate {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    @include animate(all, 0.6s);
    transform: translate(-50%, -50%);
  }
  
  &:active::before {
    width: 300px;
    height: 300px;
  }
}

// Floating action animations
.float {
  animation: floatUp 6s ease-in-out infinite;
  
  &.delay-1 { animation-delay: 1s; }
  &.delay-2 { animation-delay: 2s; }
  &.delay-3 { animation-delay: 3s; }
}

// Shake animation for errors or attention
.shake {
  animation: shake 0.5s ease-in-out;
}

// Bounce animation for success or celebration
.bounce {
  animation: bounceIn 0.6s ease-out;
}

// Keyframe definitions
@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes particleFloat {
  0% { transform: translateY(0px) rotate(0deg); }
  33% { transform: translateY(-10px) rotate(120deg); }
  66% { transform: translateY(5px) rotate(240deg); }
  100% { transform: translateY(0px) rotate(360deg); }
}

@keyframes waveMotion {
  0%, 100% { transform: translateX(0) rotate(0deg); }
  50% { transform: translateX(-25%) rotate(180deg); }
}

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: var(--primary-cyan); }
}

@keyframes glowPulse {
  0% { text-shadow: 0 0 5px var(--primary-cyan); }
  100% { text-shadow: 0 0 20px var(--primary-cyan), 0 0 30px var(--primary-cyan); }
}

@keyframes loadingDots {
  0%, 20% { content: ''; }
  40% { content: '.'; }
  60% { content: '..'; }
  80%, 100% { content: '...'; }
}

@keyframes pulse {
  0%, 100% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.7; transform: scale(1.05); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes floatUp {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

@keyframes bounceIn {
  0% { transform: scale(0.3); opacity: 0; }
  50% { transform: scale(1.05); opacity: 1; }
  70% { transform: scale(0.9); }
  100% { transform: scale(1); }
}

@keyframes fadeInUp {
  0% { opacity: 0; transform: translateY(40px); }
  100% { opacity: 1; transform: translateY(0); }
}

@keyframes slideInLeft {
  0% { opacity: 0; transform: translateX(-100px); }
  100% { opacity: 1; transform: translateX(0); }
}

@keyframes slideInRight {
  0% { opacity: 0; transform: translateX(100px); }
  100% { opacity: 1; transform: translateX(0); }
}

@keyframes zoomIn {
  0% { opacity: 0; transform: scale(0.3); }
  100% { opacity: 1; transform: scale(1); }
}

// Intersection Observer animations
.animate-on-scroll {
  opacity: 0;
  transform: translateY(30px);
  @include animate(all, 0.8s);
  
  &.in-view {
    opacity: 1;
    transform: translateY(0);
  }
  
  &.slide-left {
    transform: translateX(-30px);
    
    &.in-view {
      transform: translateX(0);
    }
  }
  
  &.slide-right {
    transform: translateX(30px);
    
    &.in-view {
      transform: translateX(0);
    }
  }
  
  &.zoom {
    transform: scale(0.8);
    
    &.in-view {
      transform: scale(1);
    }
  }
}

// Stagger animation for lists
.stagger-animation {
  .stagger-item {
    opacity: 0;
    transform: translateY(20px);
    @include animate(all, 0.6s);
    
    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        transition-delay: #{$i * 0.1}s;
      }
    }
    
    &.visible {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Hover effect animations for interactive elements
.hover-lift {
  @include animate(transform, var(--transition-base));
  
  @include hover-focus {
    transform: translateY(-3px);
  }
}

.hover-glow {
  position: relative;
  @include animate(all, var(--transition-base));
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    opacity: 0;
    @include glow(var(--primary-cyan), 0.3, 20px);
    @include animate(opacity, var(--transition-base));
    pointer-events: none;
  }
  
  @include hover-focus {
    &::after {
      opacity: 1;
    }
  }
}

.hover-rotate {
  @include animate(transform, var(--transition-base));
  
  @include hover-focus {
    transform: rotate(5deg) scale(1.05);
  }
}

// Accessibility and reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .reveal .slides section .fragment {
    transition: none;
    
    &.visible {
      opacity: 1;
      visibility: visible;
      transform: none;
    }
  }
  
  .slide-background {
    &::before,
    &::after {
      animation: none;
    }
  }
  
  .text-animate {
    animation: none;
    border: none;
    background: var(--text-primary);
    background-clip: initial;
    -webkit-background-clip: initial;
    -webkit-text-fill-color: initial;
  }
  
  .animate-on-scroll {
    opacity: 1;
    transform: none;
    transition: none;
  }
}

// Print media - disable all animations
@media print {
  * {
    animation: none !important;
    transition: none !important;
  }
  
  .reveal .slides section .fragment {
    opacity: 1 !important;
    visibility: visible !important;
    transform: none !important;
  }
}